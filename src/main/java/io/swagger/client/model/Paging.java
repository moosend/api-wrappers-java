/*
 * Moosend API
 * TODO: Add a description
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Paging
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-03T15:14:23.257Z")
public class Paging {
  @SerializedName("CurrentPage")
  private Double currentPage = null;

  @SerializedName("PageSize")
  private Double pageSize = null;

  @SerializedName("SortExpression")
  private String sortExpression = null;

  @SerializedName("SortIsAscending")
  private Boolean sortIsAscending = null;

  @SerializedName("TotalPageCount")
  private Double totalPageCount = null;

  @SerializedName("TotalResults")
  private Double totalResults = null;

  public Paging currentPage(Double currentPage) {
    this.currentPage = currentPage;
    return this;
  }

   /**
   * 
   * @return currentPage
  **/
  @ApiModelProperty(value = "")
  public Double getCurrentPage() {
    return currentPage;
  }

  public void setCurrentPage(Double currentPage) {
    this.currentPage = currentPage;
  }

  public Paging pageSize(Double pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * 
   * @return pageSize
  **/
  @ApiModelProperty(value = "")
  public Double getPageSize() {
    return pageSize;
  }

  public void setPageSize(Double pageSize) {
    this.pageSize = pageSize;
  }

  public Paging sortExpression(String sortExpression) {
    this.sortExpression = sortExpression;
    return this;
  }

   /**
   * 
   * @return sortExpression
  **/
  @ApiModelProperty(value = "")
  public String getSortExpression() {
    return sortExpression;
  }

  public void setSortExpression(String sortExpression) {
    this.sortExpression = sortExpression;
  }

  public Paging sortIsAscending(Boolean sortIsAscending) {
    this.sortIsAscending = sortIsAscending;
    return this;
  }

   /**
   * 
   * @return sortIsAscending
  **/
  @ApiModelProperty(value = "")
  public Boolean getSortIsAscending() {
    return sortIsAscending;
  }

  public void setSortIsAscending(Boolean sortIsAscending) {
    this.sortIsAscending = sortIsAscending;
  }

  public Paging totalPageCount(Double totalPageCount) {
    this.totalPageCount = totalPageCount;
    return this;
  }

   /**
   * 
   * @return totalPageCount
  **/
  @ApiModelProperty(value = "")
  public Double getTotalPageCount() {
    return totalPageCount;
  }

  public void setTotalPageCount(Double totalPageCount) {
    this.totalPageCount = totalPageCount;
  }

  public Paging totalResults(Double totalResults) {
    this.totalResults = totalResults;
    return this;
  }

   /**
   * 
   * @return totalResults
  **/
  @ApiModelProperty(value = "")
  public Double getTotalResults() {
    return totalResults;
  }

  public void setTotalResults(Double totalResults) {
    this.totalResults = totalResults;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Paging paging = (Paging) o;
    return Objects.equals(this.currentPage, paging.currentPage) &&
        Objects.equals(this.pageSize, paging.pageSize) &&
        Objects.equals(this.sortExpression, paging.sortExpression) &&
        Objects.equals(this.sortIsAscending, paging.sortIsAscending) &&
        Objects.equals(this.totalPageCount, paging.totalPageCount) &&
        Objects.equals(this.totalResults, paging.totalResults);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currentPage, pageSize, sortExpression, sortIsAscending, totalPageCount, totalResults);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Paging {\n");
    
    sb.append("    currentPage: ").append(toIndentedString(currentPage)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    sortExpression: ").append(toIndentedString(sortExpression)).append("\n");
    sb.append("    sortIsAscending: ").append(toIndentedString(sortIsAscending)).append("\n");
    sb.append("    totalPageCount: ").append(toIndentedString(totalPageCount)).append("\n");
    sb.append("    totalResults: ").append(toIndentedString(totalResults)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

