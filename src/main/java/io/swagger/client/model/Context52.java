/*
 * Moosend API
 * TODO: Add a description
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CustomField53;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Context52
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-03T15:14:23.257Z")
public class Context52 {
  @SerializedName("CreatedOn")
  private String createdOn = null;

  @SerializedName("CustomFields")
  private List<CustomField53> customFields = null;

  @SerializedName("Email")
  private String email = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("RemovedOn")
  private String removedOn = null;

  @SerializedName("SubscribeMethod")
  private Double subscribeMethod = null;

  @SerializedName("SubscribeType")
  private Double subscribeType = null;

  @SerializedName("UnsubscribedFromID")
  private String unsubscribedFromID = null;

  @SerializedName("UnsubscribedOn")
  private String unsubscribedOn = null;

  @SerializedName("UpdatedOn")
  private String updatedOn = null;

  public Context52 createdOn(String createdOn) {
    this.createdOn = createdOn;
    return this;
  }

   /**
   * 
   * @return createdOn
  **/
  @ApiModelProperty(value = "")
  public String getCreatedOn() {
    return createdOn;
  }

  public void setCreatedOn(String createdOn) {
    this.createdOn = createdOn;
  }

  public Context52 customFields(List<CustomField53> customFields) {
    this.customFields = customFields;
    return this;
  }

  public Context52 addCustomFieldsItem(CustomField53 customFieldsItem) {
    if (this.customFields == null) {
      this.customFields = new ArrayList<CustomField53>();
    }
    this.customFields.add(customFieldsItem);
    return this;
  }

   /**
   * 
   * @return customFields
  **/
  @ApiModelProperty(value = "")
  public List<CustomField53> getCustomFields() {
    return customFields;
  }

  public void setCustomFields(List<CustomField53> customFields) {
    this.customFields = customFields;
  }

  public Context52 email(String email) {
    this.email = email;
    return this;
  }

   /**
   * 
   * @return email
  **/
  @ApiModelProperty(value = "")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public Context52 ID(String ID) {
    this.ID = ID;
    return this;
  }

   /**
   * 
   * @return ID
  **/
  @ApiModelProperty(value = "")
  public String getID() {
    return ID;
  }

  public void setID(String ID) {
    this.ID = ID;
  }

  public Context52 name(String name) {
    this.name = name;
    return this;
  }

   /**
   * 
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Context52 removedOn(String removedOn) {
    this.removedOn = removedOn;
    return this;
  }

   /**
   * 
   * @return removedOn
  **/
  @ApiModelProperty(value = "")
  public String getRemovedOn() {
    return removedOn;
  }

  public void setRemovedOn(String removedOn) {
    this.removedOn = removedOn;
  }

  public Context52 subscribeMethod(Double subscribeMethod) {
    this.subscribeMethod = subscribeMethod;
    return this;
  }

   /**
   * 
   * @return subscribeMethod
  **/
  @ApiModelProperty(value = "")
  public Double getSubscribeMethod() {
    return subscribeMethod;
  }

  public void setSubscribeMethod(Double subscribeMethod) {
    this.subscribeMethod = subscribeMethod;
  }

  public Context52 subscribeType(Double subscribeType) {
    this.subscribeType = subscribeType;
    return this;
  }

   /**
   * 
   * @return subscribeType
  **/
  @ApiModelProperty(value = "")
  public Double getSubscribeType() {
    return subscribeType;
  }

  public void setSubscribeType(Double subscribeType) {
    this.subscribeType = subscribeType;
  }

  public Context52 unsubscribedFromID(String unsubscribedFromID) {
    this.unsubscribedFromID = unsubscribedFromID;
    return this;
  }

   /**
   * 
   * @return unsubscribedFromID
  **/
  @ApiModelProperty(value = "")
  public String getUnsubscribedFromID() {
    return unsubscribedFromID;
  }

  public void setUnsubscribedFromID(String unsubscribedFromID) {
    this.unsubscribedFromID = unsubscribedFromID;
  }

  public Context52 unsubscribedOn(String unsubscribedOn) {
    this.unsubscribedOn = unsubscribedOn;
    return this;
  }

   /**
   * 
   * @return unsubscribedOn
  **/
  @ApiModelProperty(value = "")
  public String getUnsubscribedOn() {
    return unsubscribedOn;
  }

  public void setUnsubscribedOn(String unsubscribedOn) {
    this.unsubscribedOn = unsubscribedOn;
  }

  public Context52 updatedOn(String updatedOn) {
    this.updatedOn = updatedOn;
    return this;
  }

   /**
   * 
   * @return updatedOn
  **/
  @ApiModelProperty(value = "")
  public String getUpdatedOn() {
    return updatedOn;
  }

  public void setUpdatedOn(String updatedOn) {
    this.updatedOn = updatedOn;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Context52 context52 = (Context52) o;
    return Objects.equals(this.createdOn, context52.createdOn) &&
        Objects.equals(this.customFields, context52.customFields) &&
        Objects.equals(this.email, context52.email) &&
        Objects.equals(this.ID, context52.ID) &&
        Objects.equals(this.name, context52.name) &&
        Objects.equals(this.removedOn, context52.removedOn) &&
        Objects.equals(this.subscribeMethod, context52.subscribeMethod) &&
        Objects.equals(this.subscribeType, context52.subscribeType) &&
        Objects.equals(this.unsubscribedFromID, context52.unsubscribedFromID) &&
        Objects.equals(this.unsubscribedOn, context52.unsubscribedOn) &&
        Objects.equals(this.updatedOn, context52.updatedOn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdOn, customFields, email, ID, name, removedOn, subscribeMethod, subscribeType, unsubscribedFromID, unsubscribedOn, updatedOn);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Context52 {\n");
    
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    removedOn: ").append(toIndentedString(removedOn)).append("\n");
    sb.append("    subscribeMethod: ").append(toIndentedString(subscribeMethod)).append("\n");
    sb.append("    subscribeType: ").append(toIndentedString(subscribeType)).append("\n");
    sb.append("    unsubscribedFromID: ").append(toIndentedString(unsubscribedFromID)).append("\n");
    sb.append("    unsubscribedOn: ").append(toIndentedString(unsubscribedOn)).append("\n");
    sb.append("    updatedOn: ").append(toIndentedString(updatedOn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

