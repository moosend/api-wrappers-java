/*
 * Moosend API
 * TODO: Add a description
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * UpdatingSegmentCriteriaRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-03T15:14:23.257Z")
public class UpdatingSegmentCriteriaRequest {
  @SerializedName("Field")
  private String field = null;

  @SerializedName("Comparer")
  private String comparer = null;

  @SerializedName("Value")
  private String value = null;

  @SerializedName("DateFrom")
  private String dateFrom = null;

  @SerializedName("DateTo")
  private String dateTo = null;

  public UpdatingSegmentCriteriaRequest field(String field) {
    this.field = field;
    return this;
  }

   /**
   * The field of the criterion to filter the mailing list by. This must be one of the following values.
   * @return field
  **/
  @ApiModelProperty(required = true, value = "The field of the criterion to filter the mailing list by. This must be one of the following values.")
  public String getField() {
    return field;
  }

  public void setField(String field) {
    this.field = field;
  }

  public UpdatingSegmentCriteriaRequest comparer(String comparer) {
    this.comparer = comparer;
    return this;
  }

   /**
   * An operator that defines the way to compare a criterion field with its value. This must be one of the following values. If not specified, &#x60;Is&#x60; will be assumed.
   * @return comparer
  **/
  @ApiModelProperty(value = "An operator that defines the way to compare a criterion field with its value. This must be one of the following values. If not specified, `Is` will be assumed.")
  public String getComparer() {
    return comparer;
  }

  public void setComparer(String comparer) {
    this.comparer = comparer;
  }

  public UpdatingSegmentCriteriaRequest value(String value) {
    this.value = value;
    return this;
  }

   /**
   * A search term to filter the specified field by.
   * @return value
  **/
  @ApiModelProperty(value = "A search term to filter the specified field by.")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }

  public UpdatingSegmentCriteriaRequest dateFrom(String dateFrom) {
    this.dateFrom = dateFrom;
    return this;
  }

   /**
   * Provides an additional filter option to be combined with the following fields.
   * @return dateFrom
  **/
  @ApiModelProperty(value = "Provides an additional filter option to be combined with the following fields.")
  public String getDateFrom() {
    return dateFrom;
  }

  public void setDateFrom(String dateFrom) {
    this.dateFrom = dateFrom;
  }

  public UpdatingSegmentCriteriaRequest dateTo(String dateTo) {
    this.dateTo = dateTo;
    return this;
  }

   /**
   * Provides an additional filter option to be combined with the following fields.
   * @return dateTo
  **/
  @ApiModelProperty(value = "Provides an additional filter option to be combined with the following fields.")
  public String getDateTo() {
    return dateTo;
  }

  public void setDateTo(String dateTo) {
    this.dateTo = dateTo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdatingSegmentCriteriaRequest updatingSegmentCriteriaRequest = (UpdatingSegmentCriteriaRequest) o;
    return Objects.equals(this.field, updatingSegmentCriteriaRequest.field) &&
        Objects.equals(this.comparer, updatingSegmentCriteriaRequest.comparer) &&
        Objects.equals(this.value, updatingSegmentCriteriaRequest.value) &&
        Objects.equals(this.dateFrom, updatingSegmentCriteriaRequest.dateFrom) &&
        Objects.equals(this.dateTo, updatingSegmentCriteriaRequest.dateTo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(field, comparer, value, dateFrom, dateTo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdatingSegmentCriteriaRequest {\n");
    
    sb.append("    field: ").append(toIndentedString(field)).append("\n");
    sb.append("    comparer: ").append(toIndentedString(comparer)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    dateFrom: ").append(toIndentedString(dateFrom)).append("\n");
    sb.append("    dateTo: ").append(toIndentedString(dateTo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

