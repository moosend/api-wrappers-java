/*
 * Moosend API
 * TODO: Add a description
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.AddingCriteriaToSegmentsRequest;
import io.swagger.client.model.AddingCriteriaToSegmentsResponse;
import io.swagger.client.model.CreatingANewSegmentRequest;
import io.swagger.client.model.CreatingANewSegmentResponse;
import io.swagger.client.model.DeletingASegmentResponse;
import io.swagger.client.model.GettingSegmentDetailsResponse;
import io.swagger.client.model.GettingSegmentSubscribersResponse;
import io.swagger.client.model.GettingSegmentsResponse;
import io.swagger.client.model.UpdatingASegmentRequest;
import io.swagger.client.model.UpdatingASegmentResponse;
import io.swagger.client.model.UpdatingSegmentCriteriaRequest;
import io.swagger.client.model.UpdatingSegmentCriteriaResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SegmentsApi
 */
@Ignore
public class SegmentsApiTest {

    private final SegmentsApi api = new SegmentsApi();

    
    /**
     * Adding criteria to segments
     *
     * Adds a new criterion (a rule) to the specified segment.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addingCriteriaToSegmentsTest() throws ApiException {
        String format = null;
        String mailingListID = null;
        String apikey = null;
        String segmentID = null;
        AddingCriteriaToSegmentsRequest body = null;
        AddingCriteriaToSegmentsResponse response = api.addingCriteriaToSegments(format, mailingListID, apikey, segmentID, body);

        // TODO: test validations
    }
    
    /**
     * Creating a new segment
     *
     * Creates a new empty segment (without criteria) for the given mailing list. You may specify the name of the segment and the way the criteria will match together.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void creatingANewSegmentTest() throws ApiException {
        String format = null;
        String mailingListID = null;
        String apikey = null;
        CreatingANewSegmentRequest body = null;
        CreatingANewSegmentResponse response = api.creatingANewSegment(format, mailingListID, apikey, body);

        // TODO: test validations
    }
    
    /**
     * Deleting A Segment
     *
     * Deletes a segment along with its criteria from the mailing list. The subscribers of the mailing list that the segment returned are not deleted or affected in any way.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deletingASegmentTest() throws ApiException {
        String format = null;
        String mailingListID = null;
        String apikey = null;
        String segmentID = null;
        DeletingASegmentResponse response = api.deletingASegment(format, mailingListID, apikey, segmentID);

        // TODO: test validations
    }
    
    /**
     * Getting segment details
     *
     * Gets detailed information on a specific segment and its criteria. However, it does not include the subscribers returned by the segment.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void gettingSegmentDetailsTest() throws ApiException {
        String format = null;
        String mailingListID = null;
        String segmentID = null;
        String apikey = null;
        GettingSegmentDetailsResponse response = api.gettingSegmentDetails(format, mailingListID, segmentID, apikey);

        // TODO: test validations
    }
    
    /**
     * Getting segment subscribers
     *
     * Gets a list of the subscribers that the specified segment returns according to its criteria. Because the results for this call could be quite big, paging information is required as input.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void gettingSegmentSubscribersTest() throws ApiException {
        String format = null;
        String mailingListID = null;
        String segmentID = null;
        String apikey = null;
        GettingSegmentSubscribersResponse response = api.gettingSegmentSubscribers(format, mailingListID, segmentID, apikey);

        // TODO: test validations
    }
    
    /**
     * Getting segments
     *
     * Get a list of all segments with their criteria for the given mailing list.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void gettingSegmentsTest() throws ApiException {
        String format = null;
        String mailingListID = null;
        String apikey = null;
        GettingSegmentsResponse response = api.gettingSegments(format, mailingListID, apikey);

        // TODO: test validations
    }
    
    /**
     * Updating a segment
     *
     * Updates the properties of an existing segment. You may update the name and match type of the segment.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updatingASegmentTest() throws ApiException {
        String format = null;
        String mailingListID = null;
        String apikey = null;
        String segmentID = null;
        UpdatingASegmentRequest body = null;
        UpdatingASegmentResponse response = api.updatingASegment(format, mailingListID, apikey, segmentID, body);

        // TODO: test validations
    }
    
    /**
     * Updating segment criteria
     *
     * Updates an existing criterion in the specified segment.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updatingSegmentCriteriaTest() throws ApiException {
        String format = null;
        String mailingListID = null;
        String apikey = null;
        String segmentID = null;
        Double criteriaID = null;
        UpdatingSegmentCriteriaRequest body = null;
        UpdatingSegmentCriteriaResponse response = api.updatingSegmentCriteria(format, mailingListID, apikey, segmentID, criteriaID, body);

        // TODO: test validations
    }
    
}
